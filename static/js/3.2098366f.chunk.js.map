{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","item","src","message","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","postsElement","posts","map","p","key","id","likesCount","createRef","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","value","onChange","e","currentTarget","onBlur","updateUserStatus","ProfileDataReduxForm","profile","error","style","formSummeryError","createNewField","Input","type","Object","keys","contacts","contact","Contact","contactTitle","contactValue","ProfileData","isOwner","goToEditMod","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","discriptionBlock","photos","large","userPhoto","mainPhoto","target","files","length","savePhoto","initialValues","formData","saveProfile","then","Preloader","Profile","content","store","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.2098366f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />        }\r\n\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPhoto\":\"ProfileInfo_mainPhoto__EhKFG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__TE-UN\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n    return(\r\n        <div className = {s.item}>\r\n           <img src = 'https://24smi.org/public/media/celebrity/2020/03/17/ndyuq11dpxep-rikardo-milos.jpg'></img>\r\n           {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nfunction MyPosts(props) {\r\n\r\n    let postsElement = props.posts.map(p =>\r\n        <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n        //props.dispatch(addPostActionCreator());\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n        //props.dispatch(updateNewPostTextActionCreator(text));\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <h3>My posts</h3>\r\n\r\n            <AddNewPostReduxForm onSubmit={onAddPost} />\r\n\r\n            {postsElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostText' \r\n                    placeholder=\"something\" validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n            {/* <div>\r\n                <textarea\r\n                    ref={newPostElement}\r\n                    onChange={onPostChange}\r\n                    value={props.newPostText}></textarea>\r\n            </div>\r\n            <div>\r\n                <button onClick={onAddPost}>Add post</button>\r\n            </div> */}\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: 'profileAddNewPostForm',\r\n\r\n})(AddNewPostForm);\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport { updateNewPostTextActionCreator, addPostActionCreator } from '../../../redux/profileReducer';\r\nimport {connect} from \"react-redux\";\r\n\r\n// function MyPostsContainer(props) {\r\n//     let state = props.store.getState();\r\n\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator());\r\n//     }\r\n\r\n//     let onPostChange = (text) => {\r\n//         let action = updateNewPostTextActionCreator(text);\r\n//         props.store.dispatch(action);\r\n//     }\r\n\r\n//     return (\r\n//         <MyPosts \r\n//         updateNewPostText={onPostChange} \r\n//         addPost={addPost} \r\n//         posts = {state.profilePage.posts} \r\n//         newPostText = {state.profilePage.newPostText}\r\n//         />\r\n//     );\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText, \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // updateNewPostText: (text) => {\r\n        //     let action = updateNewPostTextActionCreator(text);           До redux-form\r\n        //     dispatch(action);\r\n        // },\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    ///////////////////// ВСЕ ЧТО НИЖЕ ХУКИ (hook React)\r\n\r\n    let [editMode, setEditMode] = useState(false);   //тоже самое что и нижние три строки\r\n    // let stateWithSetState = useState(true);\r\n    // let editMode = stateWithSetState[0];\r\n    // let setEditMode = stateWithSetState[1];\r\n    let [status, setStatus] = useState(props.status); \r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////////// ВСЕ ЧТО ВЫШЕ ХУКИ (hook React)\r\n        return (\r\n            <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}><b>Status: </b>{props.status || '----'}</span>\r\n\r\n                </div>\r\n            }\r\n            {(editMode) && \r\n                <div>\r\n            \r\n                    <input autoFocus={true} value={status}\r\n                    onChange={onStatusChange} onBlur={deactivateEditMode} ></input>\r\n\r\n                </div>\r\n            }\r\n            </div>\r\n            \r\n        );\r\n    \r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React, { useState } from 'react';\r\nimport { create } from 'react-test-renderer';\r\nimport { createNewField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { reduxForm } from 'redux-form';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../../common/FormsControls/FormsControls.module.css';\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><button>save</button></div>\r\n            {error && <div className={style.formSummeryError}>\r\n                            {error}\r\n            </div>}\r\n            <div>\r\n                <b>Full name:</b> {createNewField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b>{createNewField(\"\", \"lookingForAJob\", [], Input, { type: 'checkbox' })}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills:</b>{createNewField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me:</b>{createNewField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={s.contact} >\r\n                        <b>{key}: </b>{createNewField(key, 'contacts.' + key, [], Input)}\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: '/edit-profile',\r\n\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/userPhoto.jpg';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div><b>{contactTitle}:</b>{contactValue}</div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMod}) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <div><button onClick={goToEditMod}>edit</button></div>}\r\n            <div>\r\n                <b>Full name:</b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ProfileInfo(props) {\r\n\r\n    let [editMode, setEditMode] = useState(false); \r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    \r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length){\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    \r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData)\r\n        .then(()=>{\r\n            setEditMode(false);\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={s.discriptionBlock}>\r\n            <img src={props.profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n            {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n            {editMode ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} /> \r\n            : <ProfileData profile={props.profile} isOwner={props.isOwner} \r\n                goToEditMod={() => {setEditMode(true)}}\r\n            />}\r\n            \r\n            <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nfunction Profile(props) {\r\n    return(\r\n        <div  className={s.content}>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} \r\n            status={props.status} updateUserStatus={props.updateUserStatus} \r\n            savePhoto={props.savePhoto}\r\n            saveProfile={props.saveProfile}\r\n            />\r\n\r\n            <MyPostsContainer store={props.store}  />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux';\r\nimport * as axios from 'axios';\r\nimport { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile} from '../../redux/profileReducer'\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);      ////Thunk\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {   \r\n      \r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n      \r\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n                this.refreshProfile();           \r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className={s.content}>\r\n                <Profile {...this.props} \r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile} \r\n                status={this.props.status} updateUserStatus={this.props.updateUserStatus}\r\n                savePhoto={this.props.savePhoto} \r\n                saveProfile={this.props.saveProfile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n///// COMPOSE заменяет все что закомменчено ниже\r\n// /////// HOC\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n// /////////////////\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n// export default connect(mapStateToProps, { getUserProfile })(WithUrlDataContainerComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);"],"sourceRoot":""}