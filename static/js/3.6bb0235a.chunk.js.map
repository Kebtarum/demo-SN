{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","item","src","message","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","postsElement","posts","map","p","likesCount","createRef","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","value","onChange","e","currentTarget","onBlur","updateUserStatus","ProfileInfo","profile","discriptionBlock","photos","large","Preloader","Profile","content","store","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.6bb0235a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />        }\r\n\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__TE-UN\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n    return(\r\n        <div className = {s.item}>\r\n           <img src = 'https://24smi.org/public/media/celebrity/2020/03/17/ndyuq11dpxep-rikardo-milos.jpg'></img>\r\n           {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nfunction MyPosts(props) {\r\n\r\n    let postsElement = props.posts.map(p =>\r\n        <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n        //props.dispatch(addPostActionCreator());\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n        //props.dispatch(updateNewPostTextActionCreator(text));\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <h3>My posts</h3>\r\n\r\n            <AddNewPostReduxForm onSubmit={onAddPost} />\r\n\r\n            {postsElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostText' \r\n                    placeholder=\"something\" validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n            {/* <div>\r\n                <textarea\r\n                    ref={newPostElement}\r\n                    onChange={onPostChange}\r\n                    value={props.newPostText}></textarea>\r\n            </div>\r\n            <div>\r\n                <button onClick={onAddPost}>Add post</button>\r\n            </div> */}\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: 'profileAddNewPostForm',\r\n\r\n})(AddNewPostForm);\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport { updateNewPostTextActionCreator, addPostActionCreator } from '../../../redux/profileReducer';\r\nimport {connect} from \"react-redux\";\r\n\r\n// function MyPostsContainer(props) {\r\n//     let state = props.store.getState();\r\n\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator());\r\n//     }\r\n\r\n//     let onPostChange = (text) => {\r\n//         let action = updateNewPostTextActionCreator(text);\r\n//         props.store.dispatch(action);\r\n//     }\r\n\r\n//     return (\r\n//         <MyPosts \r\n//         updateNewPostText={onPostChange} \r\n//         addPost={addPost} \r\n//         posts = {state.profilePage.posts} \r\n//         newPostText = {state.profilePage.newPostText}\r\n//         />\r\n//     );\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText, \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // updateNewPostText: (text) => {\r\n        //     let action = updateNewPostTextActionCreator(text);           До redux-form\r\n        //     dispatch(action);\r\n        // },\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: false,\r\n            status: this.props.status,\r\n        }\r\n\r\n        this.activateEditMode = this.activateEditMode.bind(this);\r\n        this.deactivateEditMode = this.deactivateEditMode.bind(this);\r\n    }\r\n\r\n    activateEditMode(){\r\n        this.setState({             ///////setState - ассихронный т.е. он не сразу выполняется, как и ajax запросы\r\n            editMode: true,\r\n        })\r\n    }\r\n    deactivateEditMode(){\r\n        this.setState({             \r\n            editMode: false,\r\n        })\r\n        this.props.updateUserStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value,\r\n        })\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {!this.state.editMode && \r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || '----'}</span>\r\n\r\n                </div>\r\n            }\r\n            {this.state.editMode && \r\n                <div>\r\n            \r\n                    <input autoFocus={true} onBlur={this.deactivateEditMode} \r\n                    onChange={this.onStatusChange} value={this.state.status}></input>\r\n\r\n                </div>\r\n            }\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    ///////////////////// ВСЕ ЧТО НИЖЕ ХУКИ (hook React)\r\n\r\n    let [editMode, setEditMode] = useState(false);   //тоже самое что и нижние три строки\r\n    // let stateWithSetState = useState(true);\r\n    // let editMode = stateWithSetState[0];\r\n    // let setEditMode = stateWithSetState[1];\r\n    let [status, setStatus] = useState(props.status); \r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////////// ВСЕ ЧТО ВЫШЕ ХУКИ (hook React)\r\n        return (\r\n            <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n\r\n                </div>\r\n            }\r\n            {(editMode) && \r\n                <div>\r\n            \r\n                    <input autoFocus={true} value={status}\r\n                    onChange={onStatusChange} onBlur={deactivateEditMode} ></input>\r\n\r\n                </div>\r\n            }\r\n            </div>\r\n            \r\n        );\r\n    \r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nfunction ProfileInfo(props) {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={s.discriptionBlock}>\r\n            <img src={props.profile.photos.large} />\r\n            <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus} />\r\n\r\n\r\n\r\n            {/* <ul>\r\n                <li>{props.profile.contacts.facebook}</li>\r\n                <li>{props.profile.contacts.vk}</li>\r\n                <li>{props.profile.contacts.twitter}</li>\r\n            </ul> */}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nfunction Profile(props) {\r\n    return(\r\n        <div  className={s.content}>\r\n            <ProfileInfo profile={props.profile} \r\n            status={props.status} updateUserStatus={props.updateUserStatus} />\r\n\r\n            <MyPostsContainer store={props.store}  />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux';\r\nimport * as axios from 'axios';\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from '../../redux/profileReducer'\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {   \r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);      ////Thunk\r\n        this.props.getUserStatus(userId);\r\n       \r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className={s.content}>\r\n                <Profile {...this.props} \r\n                profile={this.props.profile} \r\n                status={this.props.status} updateUserStatus={this.props.updateUserStatus} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n///// COMPOSE заменяет все что закомменчено ниже\r\n// /////// HOC\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n// /////////////////\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n// export default connect(mapStateToProps, { getUserProfile })(WithUrlDataContainerComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);"],"sourceRoot":""}