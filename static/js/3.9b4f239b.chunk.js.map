{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/common/Popup/Popup.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileDataForm.js","components/common/Popup/Popup.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","item","src","message","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","postsElement","posts","map","p","key","id","likesCount","createRef","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","statusHover","autoFocus","value","onChange","e","currentTarget","onBlur","updateUserStatus","ProfileDataReduxForm","profile","error","mainName","createNewField","Input","profileInformation","profileInformationContainer","type","contactsContainer","Object","keys","contacts","contact","toLocaleLowerCase","editAlignLeft","PopupReduxForm","popup","popupInner","FieldFile","popupInnerItems","popupInnerItem","button","closePopup","Contact","contactTitle","contactValue","cn","marginBottom","flexChild","href","target","rel","ProfileData","isOwner","goToEditMod","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","flexContainer","ProfileInfo","savePhoto","saveProfile","showPopup","setShowPopup","Preloader","togglePopup","content","contentFirstItem","sPlus","wrapperContentOne","photos","large","userPhoto","mainPhoto","disabled","formData","photoFile","contentSecondItem","initialValues","then","console","log","catch","Profile","childTwo","wrapperContent","store","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.9b4f239b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />        }\r\n\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPhoto\":\"ProfileInfo_mainPhoto__EhKFG\",\"content\":\"ProfileInfo_content__2t-Uc\",\"contentFirstItem\":\"ProfileInfo_contentFirstItem__2UWAY\",\"contentSecondItem\":\"ProfileInfo_contentSecondItem__2thOe\",\"mainName\":\"ProfileInfo_mainName__2N53B\",\"profileInformation\":\"ProfileInfo_profileInformation__1_F8d\",\"profileInformationContainer\":\"ProfileInfo_profileInformationContainer__EtvjB\",\"contactsContainer\":\"ProfileInfo_contactsContainer__DaIr3\",\"statusHover\":\"ProfileInfo_statusHover__3FB4F\",\"button\":\"ProfileInfo_button__2PVoz\",\"contact\":\"ProfileInfo_contact__3FuW-\",\"marginBottom\":\"ProfileInfo_marginBottom__1QEon\",\"flexContainer\":\"ProfileInfo_flexContainer__3oyoN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__TE-UN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Popup_popup__2l8ni\",\"popupInner\":\"Popup_popupInner__qpotN\",\"popupInnerItems\":\"Popup_popupInnerItems__3uuzP\",\"popupInnerItem\":\"Popup_popupInnerItem__1j3at\",\"button\":\"Popup_button__3vRhF\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n    return(\r\n        <div className = {s.item}>\r\n           <img src = 'https://24smi.org/public/media/celebrity/2020/03/17/ndyuq11dpxep-rikardo-milos.jpg'></img>\r\n           {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport cn from 'classnames';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nfunction MyPosts(props) {\r\n\r\n    let postsElement = props.posts.map(p =>\r\n        <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n        //props.dispatch(addPostActionCreator());\r\n    }\r\n\r\n    // let onPostChange = () => {\r\n    //     let text = newPostElement.current.value;\r\n    //     props.updateNewPostText(text);\r\n    //     //props.dispatch(updateNewPostTextActionCreator(text));\r\n    // }\r\n\r\n    return (\r\n        <div >\r\n            <h3>My posts</h3>\r\n\r\n            <AddNewPostReduxForm onSubmit={onAddPost} />\r\n\r\n            {postsElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field component={Textarea} name='newPostText' \r\n                    placeholder=\"something\" validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n            {/* <div>\r\n                <textarea\r\n                    ref={newPostElement}\r\n                    onChange={onPostChange}\r\n                    value={props.newPostText}></textarea>\r\n            </div>\r\n            <div>\r\n                <button onClick={onAddPost}>Add post</button>\r\n            </div> */}\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: 'profileAddNewPostForm',\r\n\r\n})(AddNewPostForm);\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport { updateNewPostTextActionCreator, addPostActionCreator } from '../../../redux/profileReducer';\r\nimport {connect} from \"react-redux\";\r\n\r\n// function MyPostsContainer(props) {\r\n//     let state = props.store.getState();\r\n\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator());\r\n//     }\r\n\r\n//     let onPostChange = (text) => {\r\n//         let action = updateNewPostTextActionCreator(text);\r\n//         props.store.dispatch(action);\r\n//     }\r\n\r\n//     return (\r\n//         <MyPosts \r\n//         updateNewPostText={onPostChange} \r\n//         addPost={addPost} \r\n//         posts = {state.profilePage.posts} \r\n//         newPostText = {state.profilePage.newPostText}\r\n//         />\r\n//     );\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText, \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // updateNewPostText: (text) => {\r\n        //     let action = updateNewPostTextActionCreator(text);           До redux-form\r\n        //     dispatch(action);\r\n        // },\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    ///////////////////// ВСЕ ЧТО НИЖЕ ХУКИ (hook React)\r\n\r\n    let [editMode, setEditMode] = useState(false);   //тоже самое что и нижние три строки\r\n    // let stateWithSetState = useState(true);\r\n    // let editMode = stateWithSetState[0];\r\n    // let setEditMode = stateWithSetState[1];\r\n    let [status, setStatus] = useState(props.status); \r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    ///////////////////////////////////////////////////////////////////////////////// ВСЕ ЧТО ВЫШЕ ХУКИ (hook React)\r\n        return (\r\n            <div>\r\n            {!editMode &&\r\n                <div onClick={activateEditMode} className={s.statusHover}>\r\n                    <span   >{props.status || '----'}</span>\r\n\r\n                </div>\r\n            }\r\n            {(editMode) && \r\n                <div>\r\n            \r\n                    <input autoFocus={true} value={status}\r\n                    onChange={onStatusChange} onBlur={deactivateEditMode} ></input>\r\n\r\n                </div>\r\n            }\r\n            </div>\r\n            \r\n        );\r\n    \r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React, { useState } from 'react';\r\nimport { create } from 'react-test-renderer';\r\nimport { createNewField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { reduxForm } from 'redux-form';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../../common/FormsControls/FormsControls.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error, status, updateUserStatus }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <div>\r\n                <span className={s.mainName}> {createNewField(\"Full name\", \"fullName\", [], Input)} </span>\r\n            </div>\r\n            <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus} />\r\n            <div className={s.profileInformation} >\r\n                <div className={s.profileInformationContainer}>\r\n                    <div>\r\n                        <span><b>PROFILE INFORMATION</b></span>\r\n                    </div>\r\n                    <div>\r\n                        <b>Looking for a job:</b>{createNewField(\"\", \"lookingForAJob\", [], Input, { type: 'checkbox' })}\r\n                    </div>\r\n                    <div>\r\n                        <b>My professional skills:</b>{createNewField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n                    </div>\r\n                    <div>\r\n                        <b>About me:</b>{createNewField(\"About me\", \"aboutMe\", [], Textarea)}\r\n                    </div>\r\n                </div>\r\n                <div className={s.contactsContainer}>\r\n                    <span><b>CONTACTS</b></span>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                        return <div key={key} className={s.contact} >\r\n                            <b>{key}: </b>{createNewField(key, 'contacts.' + key.toLocaleLowerCase(), [], Input,{},'',s.editAlignLeft)}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div><button>save</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    form: '/edit-profile',\r\n\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm;\r\n\r\n\r\n// const ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n//     return (\r\n//         <form onSubmit={handleSubmit}>\r\n            \r\n//             {error && <div className={style.formSummeryError}>\r\n//                             {error}\r\n//             </div>}\r\n//             <div>\r\n//                 <b>Full name:</b> {createNewField(\"Full name\", \"fullName\", [], Input)}\r\n//             </div>\r\n//             <div>\r\n//                 <b>Looking for a job:</b>{createNewField(\"\", \"lookingForAJob\", [], Input, { type: 'checkbox' })}\r\n//             </div>\r\n//             <div>\r\n//                 <b>My professional skills:</b>{createNewField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n//             </div>\r\n//             <div>\r\n//                 <b>About me:</b>{createNewField(\"About me\", \"aboutMe\", [], Textarea)}\r\n//             </div>\r\n//             <div>\r\n//                 <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n//                     return <div key={key} className={s.contact} >\r\n//                         <b>{key}: </b>{createNewField(key, 'contacts.' + key.toLocaleLowerCase(), [], Input)}\r\n//                     </div>\r\n//                 })}\r\n//             </div>\r\n//             <div><button>save</button></div>\r\n//         </form>\r\n//     )\r\n// }","import React from 'react';\r\nimport s from './Popup.module.css'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { createNewField, Input, FieldFile } from '../FormsControls/FormsControls';\r\n\r\nconst Popup = (props) => {\r\n    return (\r\n        // <div className={s.popup}>\r\n        //     <div className={s.popupInner}>\r\n        //         <h1>{props.text}</h1>\r\n        //         <input type={\"file\"} onChange={props.onMainPhotoSelected} />\r\n        //         <button onClick={props.onMainPhotoAdd}>close me</button>\r\n        //         <button onClick={props.closePopup}>close me</button>\r\n        //     </div>\r\n        // </div>\r\n        <form onSubmit={props.handleSubmit} className={s.popup}>\r\n            <div className={s.popupInner}>\r\n                <h2>Uploading new photo</h2>\r\n                {/* {createNewField(null, 'photoFile',[], Input, { type: 'file' })} */}\r\n                {/* <Field component={input} name={'photoFile'} type={'file'} /> */}\r\n                {/* <input type=\"file\" name=\"photoFile\" onChange={() =>{}} /> */}\r\n                <Field name=\"photoFile\" component={FieldFile} type={\"file\"} />\r\n                {/* <input type={\"file\"}  /> */}\r\n                <div className={s.popupInnerItems}>\r\n                    <div className={s.popupInnerItem}>\r\n                        <button className={s.button} >Submit</button>\r\n                    </div>\r\n                    <div className={s.popupInnerItem}>\r\n                        <button className={s.button} onClick={props.closePopup}>Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n        </form>\r\n      );\r\n    }\r\n\r\n    const PopupReduxForm = reduxForm({\r\n        form: '/change-profile-photo',\r\n    \r\n    })(Popup);\r\n\r\nexport default PopupReduxForm;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport sPlus from '../../../AppPlus.module.css'\r\nimport cn from 'classnames';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/userPhoto.jpg';\r\nimport ProfileDataReduxForm from './ProfileDataForm';\r\nimport PopupReduxForm from '../../common/Popup/Popup';\r\n\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return (\r\n        <div className={cn(s.marginBottom, s.flexChild)}>\r\n        {/* <b>{contactTitle}:</b>{contactValue} */}\r\n        \r\n        {contactValue ? \r\n        <a href={`${contactValue}`} target=\"_blank\" rel=\"noopener noreferrer\">{contactTitle}</a>\r\n        : <span>{contactTitle}</span>\r\n        }\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMod, status, updateUserStatus }) => {\r\n    return (\r\n        <div>\r\n            {/* {isOwner && <div><button onClick={goToEditMod}>edit</button></div>} */}\r\n\r\n            <div>\r\n                <span className={s.mainName}>{profile.fullName}</span>\r\n            </div>\r\n            <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus} />\r\n            <div className={s.profileInformation}>\r\n                <div className={s.profileInformationContainer}>\r\n                    <div className={s.marginBottom}>\r\n                        <span><b>PROFILE INFORMATION</b></span>\r\n                    </div>\r\n                    <div className={s.marginBottom}>\r\n                        <b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n                    </div>\r\n                    {profile.lookingForAJob &&\r\n                        <div className={s.marginBottom}>\r\n                            <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n                        </div>\r\n                    }\r\n                    <div className={s.marginBottom}>\r\n                        <b>About me:</b> {profile.aboutMe}\r\n                    </div>\r\n                </div>\r\n                <div className={s.contactsContainer}>\r\n                <div className={s.marginBottom}>\r\n                <span><b>CONTACTS</b></span>\r\n                </div >\r\n                    <div className={s.flexContainer}>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                    })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ProfileInfo({ isOwner, profile, status, updateUserStatus, savePhoto, saveProfile }) {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [showPopup, setShowPopup] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    // const onMainPhotoSelected = (e) => {\r\n    //     if (e.target.files.length) {\r\n    //         bufPhoto = e.target.files[0]\r\n    //     }\r\n    // }\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false);\r\n                console.log(\"сработал THEN\")\r\n            })\r\n            .catch(() => {\r\n                setEditMode(true);\r\n                console.log(\"сработал CATCH\")\r\n            })\r\n\r\n    }\r\n\r\n    const onSubmitPhoto = (formData) => {\r\n        // console.log(formData.photoFile[0]);\r\n        // debugger;\r\n        savePhoto(formData.photoFile[0]);\r\n        setShowPopup(!showPopup);\r\n\r\n    }\r\n\r\n    const togglePopup = () => {\r\n        setShowPopup(!showPopup);\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={cn(s.contentFirstItem, sPlus.wrapperContentOne)}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n                {isOwner && <button className={s.button} onClick={togglePopup}>Change photo</button>}\r\n                {/* {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />} */}\r\n                {isOwner && <div><button className={s.button} disabled={editMode} onClick={setEditMode}>edit</button></div>}\r\n                {showPopup ? <PopupReduxForm closePopup={togglePopup}\r\n                    onSubmit={onSubmitPhoto}\r\n                />\r\n                    : null\r\n                }\r\n            </div>\r\n            <div className={cn(s.contentSecondItem, sPlus.wrapperContentOne)}>\r\n                {/* <div className={s.contentSecondItem}>\r\n                    {profile.fullName}\r\n                    <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus} />\r\n                </div> */}\r\n                <div>\r\n                    {editMode ? <ProfileDataReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit}\r\n                        status={status} updateUserStatus={updateUserStatus}\r\n                    />\r\n                        : <ProfileData profile={profile} isOwner={isOwner}\r\n                            goToEditMod={() => { setEditMode(true) }}\r\n                            status={status} updateUserStatus={updateUserStatus}\r\n                        />}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport sPlus from '../../AppPlus.module.css'\r\nimport cn from 'classnames';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nfunction Profile(props) {\r\n    return(\r\n        <div  className={s.content}>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} \r\n            status={props.status} updateUserStatus={props.updateUserStatus} \r\n            savePhoto={props.savePhoto}\r\n            saveProfile={props.saveProfile}\r\n            />\r\n            <div className={cn(s.childTwo,sPlus.wrapperContent)}>\r\n                <MyPostsContainer store={props.store} />\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux';\r\nimport * as axios from 'axios';\r\nimport { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile} from '../../redux/profileReducer'\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);      ////Thunk\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {   \r\n      \r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n      \r\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n                this.refreshProfile();           \r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className={s.content}>\r\n                <Profile {...this.props} \r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile} \r\n                status={this.props.status} updateUserStatus={this.props.updateUserStatus}\r\n                savePhoto={this.props.savePhoto} \r\n                saveProfile={this.props.saveProfile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n///// COMPOSE заменяет все что закомменчено ниже\r\n// /////// HOC\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n// /////////////////\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\n// export default connect(mapStateToProps, { getUserProfile })(WithUrlDataContainerComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);"],"sourceRoot":""}